% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{dfft}
\alias{dfft}
\alias{pfft}
\alias{qfft}
\alias{dfft.gogarch.fft}
\alias{pfft.gogarch.fft}
\alias{qfft.gogarch.fft}
\alias{dfft.gogarch.fftsim}
\alias{pfft.gogarch.fftsim}
\alias{qfft.gogarch.fftsim}
\title{FFT density, distribution and quantile method}
\usage{
dfft(object, ...)

pfft(object, ...)

qfft(object, ...)

\method{dfft}{gogarch.fft}(object, index = 1, ...)

\method{pfft}{gogarch.fft}(object, index = 1, ...)

\method{qfft}{gogarch.fft}(object, index = 1, ...)

\method{dfft}{gogarch.fftsim}(object, index = 1, sim = 1, ...)

\method{pfft}{gogarch.fftsim}(object, index = 1, sim = 1, ...)

\method{qfft}{gogarch.fftsim}(object, index = 1, sim = 1, ...)
}
\arguments{
\item{object}{an object of class \dQuote{gogarch.fft} formed by calling
the \code{\link{tsconvolve}} method.}

\item{...}{additional parameters passed to the method.}

\item{index}{the time index on which to generate the function.}

\item{sim}{the simulation draw on which to generate the function (for the
predict and simulate objects).}
}
\value{
an function object which can then be called to calculate the density
distribution or quantile for a particular instance (or time point),
}
\description{
FFT density, distribution and quantile method
}
\details{
These methods generate smooth approximation to the distribution
functions, returning in turn a function object which can be further called
with additional arguments expected from the density, distribution and quantile
functions. Random number generation can be achieved through the use of uniform
random variates and the quantile function (inverse CDF method).
}
