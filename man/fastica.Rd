% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ica.R
\name{fastica}
\alias{fastica}
\title{The Fast ICA (FASTICA)}
\usage{
fastica(
  X,
  components = NCOL(X),
  demean = TRUE,
  method = "symmetric",
  pca_cov = "ML",
  first_eigen = NULL,
  last_eigen = NULL,
  E = NULL,
  D = NULL,
  Z = NULL,
  K = NULL,
  L = NULL,
  A_init = NULL,
  fun = "tanh",
  tune = "none",
  tanh_par = 1,
  gauss_par = 1,
  step_size = 1,
  stabilization = FALSE,
  tol = 1e-04,
  maxiter = 1000,
  maxiter_fine = 100,
  sampling_ratio = 1,
  seed = NULL,
  trace = FALSE,
  ...
)
}
\arguments{
\item{X}{the data matrix (n x m) where n is the number of samples and m is the number of signals.}

\item{components}{the number of independent components to extract.}

\item{demean}{whether to demean the data.}

\item{method}{the method to use, with \dQuote{symmetric} estimating all the
independent component in parallel, whereas \dQuote{deflation} estimates
independent components one-by-one similar to projection pursuit.}

\item{pca_cov}{the method used to calculate the covariance matrix for PCA. Options are
\dQuote{ML} (maximum likelihood), \dQuote{LW} (Ledoit-Wolf) shrinkage method and
\dQuote{EWMA} (exponentially weighted moving average).}

\item{first_eigen}{This and \code{last_eigen} specify the range for eigenvalues
that are retained, \code{first_eigen} is the index of largest eigenvalue to be
retained. Making use of this option overwrites \code{components}.}

\item{last_eigen}{the index of the last (smallest) eigenvalue to be retained
and overwrites \code{component} argument.}

\item{E}{(optional) Eigen vector from the PCA decomposition. If this
is provided then \code{D} must also be provided.}

\item{D}{(optional) Eigen values from the PCA decomposition.}

\item{Z}{(optional) provided whitened signal matrix. If this is provided then
both \code{K} and \code{L} must also be provided.}

\item{K}{(optional) whitening matrix.}

\item{L}{(optional) de-whitening matrix.}

\item{A_init}{optional initialization for the mixing matrix.}

\item{fun}{the non-linear function to use in the fixed-point algorithm.}

\item{tune}{the non-linear function to use for fine tuning.}

\item{tanh_par}{control parameter for the \dQuote{tanh} function.}

\item{gauss_par}{control parameter for the \dQuote{gauss} function.}

\item{step_size}{if this is anything other than 1, the program will use the
stabilized version of the algorithm (see stabilization argument).}

\item{stabilization}{whether to use the stabilized version of the algorithm, in
which case the step_size can momentarily be halved if the algorithm is stuck
between two points (called a stroke). Additionally if there no convergence
before half of the maximum number of iterations has been reached then step_size
will be halved for the rest of the rounds.}

\item{tol}{the stopping tolerance.}

\item{maxiter}{the maximum number of iterations.}

\item{maxiter_fine}{the maximum number of iterations for the fine tuning algorithm in
the deflation method.}

\item{sampling_ratio}{percent (0-1) of random samples used in one iteration}

\item{seed}{the random seed for the random number generator.}

\item{trace}{whether to print out progress information.}

\item{...}{additional arguments to be passed to the covariance matrix calculation.
For arguments passed to the \dQuote{EWMA} method, it optionally takes an additional argument
\code{lambda} which is the exponential decay parameter (default is 0.96).
The \dQuote{LW} takes an additional argument \code{shrink} which is the
shrinkage parameter (default is to calculate this).}
}
\value{
A list with the following components:
\item{A}{the mixing matrix}
\item{W}{the unmixing matrix}
\item{S}{the independent components}
\item{U}{the rotation matrix}
\item{K}{the whitening matrix}
\item{L}{the dewhitening matrix}
\item{C}{the covariance matrix}
\item{Z}{the whitened signal}
\item{mu}{the mean of the mixed signal (X)}
\item{elapsed}{the time taken to run the algorithm}
}
\description{
The fast fixed point algorithm for independent component analysis and
projection pursuit based on the direct translation to R of the FastICA
program of the original authors at the Helsinki University of Technology.
}
\details{
Steps to the general algorithm are as follows:
\enumerate{
\item Demean the data if required: \eqn{M = X - \mu}
\item Calculate the covariance matrix \eqn{\Sigma}  using one of the
methods provided.
\item Use an eigen decomposition to calculate the eigenvalues and eigenvectors
of the covariance matrix: \eqn{\Sigma = E D E'}
\item Select the range of eigenvalues to retain (dimensionality reduction).
\item Calculate the whitening matrix \eqn{K = D^{-1/2}E'} and the dewhitening
matrix \eqn{L = E D^{1/2}}.
\item Whiten the data: \eqn{Z = M K'}. Unwhitening is done by \eqn{M = Z L'}.
\item Run the RADICAL algorithm to calculate the rotation matrix \eqn{U},
the mixing matrix: \eqn{A = U^{-1} L} and the unmixing matrix \eqn{W = K' U}.
\item Calculate the independent components: \eqn{S = M W + \bold{1}\mu W } where
\bold{1} is a matrix of ones with dimension (samples x 1).
}
Notice that in calculating the mixing (A) and unmixing (W) matrices we have combined
the whitening (K) and un-whitening (L) matrices with the rotation matrix \eqn{U}.
}
\references{
\insertRef{Hyvarinen1999}{tsmarch}
}
